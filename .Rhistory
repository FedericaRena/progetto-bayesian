# 		 rep("",8),
# 		 as.character(as.integer(ceiling(lims[1]))))
limits = lims
) +
labs(title = paste0(chosen_variable_name," - ",modello," model (week ",time,")" ),
fill = chosen_variable_name)+
# theme(legend.position = "right",legend.justification = "bottom")
theme(legend.position = "bottom")+
theme_bw()
q = p +
geom_point(data = df_cluster_cut, aes(x = Longitude, y = Latitude,
color =  cols[as.numeric(clusters)]), size = 2)+
scale_color_identity(guide = 'none')
actual_clusters = c()
for(cl in 1:len(edges_list)){
edges_to_plot = edges_list[[cl]]
if(!is.null(edges_to_plot)){
actual_clusters = c(actual_clusters,cl)
if(verbose==1){
cat("procesing cluster",cl,"\n")
print(actual_clusters)
}
q = q +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend,
color = cols[as.numeric(cluster)]),
linewidth=1.2, data = edges_to_plot, show.legend = FALSE)
}
}
q = q + scale_color_identity(guide = 'none')
qf = q +
geom_sf(data = altre_regioni, fill = color_empty ,
color = color_fill, linewidth = 0.3,alpha=0.01, show.legend = FALSE) +
geom_sf(data = lombardia_2, fill = color_empty, color = "gold",
linewidth = 0.3,alpha=0.07, show.legend = FALSE) +
coord_sf(xlim = range(sites$longitude) + padding,
ylim = range(sites$latitude) + padding,
expand = FALSE)+
theme_bw()
return(qf)
}
library(magick)
library(animation)
library(gifski)
library(av)
color_low =  "white"
color_high = "black"
verbose = 0
interest_variables_animated_grid = c("EM_nh3_livestock_mm",
"LA_hvi",
"LA_lvi",
"EM_nox_sum",
"WE_wind_speed_100m_max",
"WE_tot_precipitation"
)
build_df_cluster_cut = function(time,clusters){
df_cluster_cut = data.frame(
Longitude = sites$longitude,
Latitude = sites$latitude,
clusters = clusters # change with something from salso_out_lists
)
return(df_cluster_cut)
}
frammeratte = 2
for(mod in 1:4){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/",
names(salso_out_mode_cl)[mod],"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
curr_clusters = salso_out_lists[[modello]][time][[1]][1:105]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",names(salso_out_mode_cl)[mod],"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
frammeratte = 2
for(mod in 1:4){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/",
names(salso_out_mode_cl)[mod],"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",names(salso_out_mode_cl)[mod],"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
for(mod in mods){print(mod)}
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
united_plot <- function(time_step,chosen_variable_name,df_cluster_cut,cols){
data_from_to = data_agc_lomb_weekly_2018_mean[
data_agc_lomb_weekly_2018_mean$Week==time_step,]
chosen_variable = as.numeric(data_from_to[[chosen_variable_name]])
### this to set lims looking at values of all weeks, ie are fixed for all t of the loop
lims = extrema(na.omit(data_from_to[,chosen_variable_name]))
### this to set lims in a time dependent way
# lims = extrema(chosen_variable)
### this to approximate them to int
# lims = c(floor(lims[1]),ceiling(lims[2]))
edges_list = assemble_edges_list(df_ccut$clusters)
p =
ggplot() +
geom_tile(data = data_from_to, aes(x = Longitude, y = Latitude, fill = chosen_variable),
colour = "grey50",alpha = 0.9,linewidth=0) +
scale_fill_gradient(low = color_low, high = color_high,na.value = "gray",
# breaks = seq(as.integer(floor(lims[1])),
# 			 as.integer(ceiling(lims[2])),
# 			 length.out = 10),
# labels=c(as.character(as.integer(floor(lims[1]))),
# 		 rep("",8),
# 		 as.character(as.integer(ceiling(lims[1]))))
limits = lims
) +
labs(title = paste0(chosen_variable_name," - ",mod," model (week ",time,")" ),
fill = chosen_variable_name)+
# theme(legend.position = "right",legend.justification = "bottom")
theme(legend.position = "bottom")+
theme_bw()
q = p +
geom_point(data = df_cluster_cut, aes(x = Longitude, y = Latitude,
color =  cols[as.numeric(clusters)]), size = 2)+
scale_color_identity(guide = 'none')
actual_clusters = c()
for(cl in 1:len(edges_list)){
edges_to_plot = edges_list[[cl]]
if(!is.null(edges_to_plot)){
actual_clusters = c(actual_clusters,cl)
if(verbose==1){
cat("procesing cluster",cl,"\n")
print(actual_clusters)
}
q = q +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend,
color = cols[as.numeric(cluster)]),
linewidth=1.2, data = edges_to_plot, show.legend = FALSE)
}
}
q = q + scale_color_identity(guide = 'none')
qf = q +
geom_sf(data = altre_regioni, fill = color_empty ,
color = color_fill, linewidth = 0.3,alpha=0.01, show.legend = FALSE) +
geom_sf(data = lombardia_2, fill = color_empty, color = "gold",
linewidth = 0.3,alpha=0.07, show.legend = FALSE) +
coord_sf(xlim = range(sites$longitude) + padding,
ylim = range(sites$latitude) + padding,
expand = FALSE)+
theme_bw()
return(qf)
}
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",mod,"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/MODE-",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
#curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
# mode clusters
curr_clusters = salso_out_mode_cl[[mod]]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",mod,"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
salso_out_mode_cl[[mod]]
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
#curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
# mode clusters
curr_clusters = salso_out_mode_cl[[mod]]
df_ccut = build_df_cluster_cut(1,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",mod,"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/MODE-",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
#curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
# mode clusters
curr_clusters = salso_out_mode_cl[[mod]]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",mod,"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 1)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/MODE-",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
#curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
# mode clusters
curr_clusters = salso_out_mode_cl[[mod]]
df_ccut = build_df_cluster_cut(time,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",mod,"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 2)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
salso_out_lists[[mod]][time][[1]][1:105]
name_rdata
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
imgs
img_list <- lapply(imgs, image_read)
img_joined <- image_join(img_list)
img_animated <- image_animate(img_joined, fps = 2)
name_rdata
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/MODE-",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
#curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
# mode clusters
curr_clusters = salso_out_mode_cl[[mod]]
df_ccut = build_df_cluster_cut(1,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",mod,"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 2)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
salso_out_mode_cl[[mod]]
cur_num
mods
color_correct_clusters(df_ccut,idea=2,verbose=0,nint=15)
df_ccut
color_correct_clusters(df_ccut,idea=2,verbose=0,nint=30)
df_ccut
frammeratte = 2
for(mod in mods){
for( var in interest_variables_animated_grid){
chosen_variable_name = var
titolo = chosen_variable_name
name_rdata = paste0("./plot functions/gifs/MODE-",
mod,"-",chosen_variable_name)
# Crea la nuova cartella
dir.create(name_rdata)
for (time in seq(1,53,by = 2)){
#curr_clusters = salso_out_lists[[mod]][time][[1]][1:105]
# mode clusters
curr_clusters = salso_out_mode_cl[[mod]]
df_ccut = build_df_cluster_cut(1,curr_clusters)
cols = color_correct_clusters(df_ccut,idea=2,verbose=0,nint=30)
current_plot = united_plot(time,var,df_ccut,cols)
current_plot = current_plot+theme(legend.title=element_blank())
cur_num = sprintf("%02d", time) # tempo con due cifre necessario per le gif su latex
ggsave(file=paste0(name_rdata,"/",mod,"-",chosen_variable_name,"-",cur_num,".png"),
plot = current_plot,
units="px", width=2000, height=1200) # maybe try to change them
}
#### create mp4 ####
imgs <- list.files(path = name_rdata, pattern = ".png", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 1 frames per second. 1 to freely control the fps/framerate later
img_animated <- image_animate(img_joined, fps = 2)
image_write_video(image = img_animated, path = paste0(name_rdata,".mp4"),framerate=frammeratte)
}
}
