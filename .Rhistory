time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_discrete(labels = unique_month_names,breaks = breakes)+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- format(data_16_to_21$Time , "%d %m")
unique_month_names  <- unique(month.name[month(data_16_to_21$Time)])
breakes =  c(1, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334)
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_discrete(labels = unique_month_names,breaks = breakes)+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
data_16_to_21$time
print(time_trend)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- format(data_16_to_21$Time , "%d %m")
unique_month_names  <- unique(month.name[month(data_16_to_21$Time)])
breakes =  c(1, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334)
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
#scale_x_discrete(labels = unique_month_names,breaks = breakes)+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- format(data_16_to_21$Time , "%m %d")
unique_month_names  <- unique(month.name[month(data_16_to_21$Time)])
breakes =  c(1, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334)
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
#scale_x_discrete(labels = unique_month_names,breaks = breakes)+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- format(data_16_to_21$Time , "%m %d")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- as.Date(data_16_to_21$Time , format="%m %d")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
data_16_to_21$time
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- as.Date(data_16_to_21$Time , format=   "%j")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- as.Date(data_16_to_21$Time , format=   "%j")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
data_16_to_21$time
as.Date
?as.Date
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- as.Date(data_16_to_21$Time , format=   "%m%d")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
data_16_to_21$time
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- as.Date(data_16_to_21$Time , tryFormats =   "%m%d")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
data_16_to_21$time
?format
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- as.Date(format(data_16_to_21$Time , "%j"))
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
data_16_to_21$time <- format(data_16_to_21$Time , "%j")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = time,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
substr("2016-01-01",6,10)
data_16_to_21$month_day =substr(data_16_to_21$Time,6,10)
data_16_to_21$month_day
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
data_16_to_21$month_day =substr(data_16_to_21$Time,6,10)
# Converti la colonna Time in formato Date
data_16_to_21$Time <- as.Date(data_16_to_21$Time, format =  "%y %d %m")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = month_day,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
data_16_to_21$month_day = as.Date(data_16_to_21$month_day)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
data_16_to_21$month_day =paste0("1990-",substr(data_16_to_21$Time,6,10))
data_16_to_21$month_day = as.Date(data_16_to_21$month_day)
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21) +
geom_line( aes(x = month_day,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
data_16_to_21$month_day =paste0("1990-",substr(data_16_to_21$Time,6,10))
data_16_to_21$month_day = as.Date(data_16_to_21$month_day)
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21,aes(x = month_day,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
geom_line() +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
time_trend <- time_trend + transition_reveal(as.numeric(data_16_to_21$time)) + geom_point() + view_follow(fixed_y = T)
b <- animate(time_trend, duration = 20, fps = 20, renderer = av_renderer())
time_trend <- time_trend + transition_reveal(as.numeric(data_16_to_21$month_day)) + geom_point() + view_follow(fixed_y = T)
b <- animate(time_trend, duration = 20, fps = 20, renderer = av_renderer())
data_16_to_21$t = format(data_16_to_21$Time,"%j")
library(lubridate)
stations = unique(df_agri$IDStations)
cols = colora(6,970,show=F)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1]
df_st = df_stat[[st]]
data_16_to_21 = subset(df_st,Time>="2016-01-01" & Time<="2021-12-31")
data_16_to_21$month_day =paste0("1990-",substr(data_16_to_21$Time,6,10))
data_16_to_21$month_day = as.Date(data_16_to_21$month_day)
data_16_to_21$t = format(data_16_to_21$Time,"%j")
# Crea il grafico ggplot
time_trend <- ggplot(data_16_to_21,aes(x = month_day,
y = AQ_pm10,
group=year(Time),
color = as.factor(year(Time)))) +
geom_line() +
labs(x = "Year", y = "PM_10 values", title = paste0("Station ", st, ", all years")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_x_date(date_labels = "%b")+
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
print(time_trend)
head(data_16_to_21)
time_trend <- time_trend + transition_reveal(as.numeric(t) + geom_point() + view_follow(fixed_y = T)
b <- animate(time_trend, duration = 20, fps = 20, renderer = av_renderer())
time_trend <- time_trend + transition_reveal(as.numeric(t)) + geom_point() + view_follow(fixed_y = T)
b <- animate(time_trend, duration = 20, fps = 20, renderer = av_renderer())
file_name = "trend_gif"
output_file <- paste0("./gifs/",file_name,".mp4")
anim_save(output_file,b)
time_trend <- time_trend + transition_reveal(as.numeric(t)) + geom_point()
b <- animate(time_trend, duration = 20, fps = 10, renderer = av_renderer())
file_name = "trend_gif"
output_file <- paste0("./gifs/",file_name,".mp4")
anim_save(output_file,b)
time_trend <- time_trend + transition_reveal(as.numeric(t)) + geom_point() + view_follow(fixed_x = T,fixed_y = T)
b <- animate(time_trend, duration = 20, fps = 20, renderer = av_renderer())
file_name = "trend_gif"
output_file <- paste0("./gifs/",file_name,".mp4")
anim_save(output_file,b)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1:4]
df_st = df_stat[[st]]
df_st = df_stat[st]
df_st
colnames
colnames(df_agri)
df_agri %>% subset(IDStations %in% st)
unique(df_agri$IDStations)
data_2016<-df_agri %>% subset(IDStations %in% st)
unique(data_2016$IDStations)
data_2016 = data_2016[data_2016$Time>=as.Date(paste0(year,"-01-01"),"%Y-%m-%d") &
data_2016$Time<=as.Date(paste0(year,"-12-31"),"%Y-%m-%d"),]
data_2016
year
year = 2016
data_2016<-df_agri %>% subset(IDStations %in% st)
unique(data_2016$IDStations)
data_2016 = data_2016[data_2016$Time>=as.Date(paste0(year,"-01-01"),"%Y-%m-%d") &
data_2016$Time<=as.Date(paste0(year,"-12-31"),"%Y-%m-%d"),]
data_2016
cols = colora(10,970,show=0)
stations = unique(df_agri$IDStations)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1:4]
year = 2016
data_2016<-df_agri %>% subset(IDStations %in% st)
unique(data_2016$IDStations)
data_2016 = data_2016[data_2016$Time>=as.Date(paste0(year,"-01-01"),"%Y-%m-%d") &
data_2016$Time<=as.Date(paste0(year,"-12-31"),"%Y-%m-%d"),]
# Crea il grafico ggplot
station_trend <- ggplot(data_16_to_21,aes(x = Time,
y = AQ_pm10,
group=IDStations,
color = as.factor(IDStations))) +
geom_line() +
labs(x = "Stations", y = "PM_10 values", title = paste0("Year",year, ", all stations")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
station_trend
head(data_2016)
dim(data_2016)[1]/4
cols = colora(10,970,show=0)
stations = unique(df_agri$IDStations)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1:4]
year = 2016
data_2016<-df_agri %>% subset(IDStations %in% st)
data_2016 = data_2016[data_2016$Time>=as.Date(paste0(year,"-01-01"),"%Y-%m-%d") &
data_2016$Time<=as.Date(paste0(year,"-12-31"),"%Y-%m-%d"),]
# Crea il grafico ggplot
station_trend <- ggplot(data_2016,aes(x = Time,
y = AQ_pm10,
group=IDStations,
color = as.factor(IDStations))) +
geom_line() +
labs(x = "Stations", y = "PM_10 values", title = paste0("Year",year, ", all stations")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_color_manual(values = cols) +
theme(legend.position = "top")+
theme(panel.grid = element_blank())
station_trend
for (year in 2016:2021){
for (i in 1:length(stations)){
st = stations[i]
df_st = df_stat[[st]]
df_st = df_st[df_st$Time>=as.Date(paste0(year,"-01-01"),"%Y-%m-%d") &
df_st$Time<=as.Date(paste0(year,"-12-31"),"%Y-%m-%d"),]
if(st=="1264"){
plot(df_st$Time,df_st$AQ_pm10,type="l",col=cols[i%%10],
ylim=range(na.omit(df_agri$AQ_pm10)),main=paste0(year," all the stations"),
xlab="months",ylab="PM_10 values")
} else{
lines(df_st$Time,df_st$AQ_pm10,type="l",col=cols[i%%10])
}
}
}
cols = colora(10,970,show=0)
stations = unique(df_agri$IDStations)
# for semplicity let's do one station for now, can be expanded with a simple for loop
st = stations[1:4]
year = 2016
data_2016<-df_agri %>% subset(IDStations %in% st)
data_2016 = data_2016[data_2016$Time>=as.Date(paste0(year,"-01-01"),"%Y-%m-%d") &
data_2016$Time<=as.Date(paste0(year,"-12-31"),"%Y-%m-%d"),]
# Crea il grafico ggplot
station_trend <- ggplot(data_2016,aes(x = Time,
y = AQ_pm10,
group=IDStations,
color = as.factor(IDStations))) +
geom_line() +
labs(x = "Stations", y = "PM_10 values", title = paste0("Year",year, ", all stations")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_color_manual(values = cols) +
theme(legend.position = "top")+
scale_x_date(date_labels = "%b")+
theme(panel.grid = element_blank())
station_trend
station_trend <- ggplot(data_2016,aes(x = Time,
y = AQ_pm10,
group=IDStations,
color = as.factor(IDStations))) +
geom_line() +
labs(x = "Stations", y = "PM_10 values", title = paste0("Year",year, ", all stations")) +
ylim(range(na.omit(data_16_to_21$AQ_pm10))) +
scale_color_manual(values = cols) +
theme(legend.position = "top")+
scale_x_date(date_labels = "%b",date_breaks = "1 month")+
theme(panel.grid = element_blank())
station_trend
station_trend <- station_trend + transition_reveal(Time) + geom_point() + view_follow(fixed_x = T,fixed_y = T)
b <- animate(station_trend, duration = 20, fps = 20, renderer = av_renderer())
file_name = "station_trend"
output_file <- paste0("./gifs/",file_name,".mp4")
anim_save(output_file,b)
head(df_agri)
