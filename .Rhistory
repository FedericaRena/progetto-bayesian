z=rep(1:nobs, times=nsubject), # is the time
Name=rep(1:nsubject, each=nobs))
Xcon = data.frame(altitude = df_weekly$Altitude[seq(from=1, by = 53, length.out=105)])
subject_obs_vec <- dat$Name
y <- dat$y
z <- dat$z
nknots <- 15
niter <- 5000
nburn <- 2000
nthin <- 3 # we consider every nthin iteartions
nout <- (niter-nburn)/nthin # the number of interatio that we coniser from the mcmc
simparms <- c(0.0, 1.0, 0.1, 1.0, 1.0, 0.1, 1) # WHAT IS THEIR MEANING IF WE DON'T USE COV
modelPriors <- c(0.5, # Asig
1000^2, # s2_mu
0, # mb0
1000^2, # s2b0
1, # as2b0
1, # bs2b0
1, # at
1.0/0.05) # bt
fits <- list()
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = Xcon, Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
source("include.R")
source("plot functions/plotter.R")
source("include_clusters_functions.R")
source("plot functions/plotter.R")
source("include_clusters_functions.R")
load("../data/df_weekly.Rdata")
View(df_weekly_scaled_centered)
View(df_wsc)
library(ppmSuite)
library(tidyverse)
library(ppmSuite)
library(tidyverse)
library(lubridate)
library(patchwork)
library(salso)
load("../data/df_weekly.Rdata")
nobs <- 53 # number of week for each stations
nsubject <- length(unique(df_weekly$IDStations)) # number od station
# input data for the curve_PPmX function
y = matrix(nrow = 0, ncol = nobs)
y = df_weekly$AQ_pm10
#
dat <- data.frame(y=c(y),
z=rep(1:nobs, times=nsubject), # is the time
Name=rep(1:nsubject, each=nobs))
dat
View(df_weekly)
Xcon1 = data.frame(altitude = df_weekly$Altitude[seq(from=1, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=1, by = 53, length.out=105)])
Xcon1
Xcon2 = data.frame(altitude = df_weekly$Altitude[seq(from=2, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=2, by = 53, length.out=105)])
Xcon2
allXcons = list()
for (i in 1:53) {
allXcons[i] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
for (i in 1:105) {
allXcons[i] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
allXcons[1]
Xcon1
for (i in 1:53) {
allXcons[[i] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
del(allXcons)
rm(allXcons)
for (i in 1:53) {
allXcons[[i]] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
allXcons = list()
for (i in 1:53) {
allXcons[[i]] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
allXcons[1]
all.equal(allXcons[1],  Xcon1)
allXcons[1]
Xcon1
allXcons[2]
Xcon2
for (i in 1:53) {
allXcons[[i]] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
subject_obs_vec <- dat$Name
y <- dat$y
z <- dat$z
nknots <- 15
niter <- 5000
nburn <- 2000
nthin <- 3 # we consider every nthin iteartions
nout <- (niter-nburn)/nthin # the number of interatio that we coniser from the mcmc
simparms <- c(0.0, 1.0, 0.1, 1.0, 1.0, 0.1, 1) # WHAT IS THEIR MEANING IF WE DON'T USE COV
modelPriors <- c(0.5, # Asig
1000^2, # s2_mu
0, # mb0
1000^2, # s2b0
1, # as2b0
1, # bs2b0
1, # at
1.0/0.05) # bt
all_fits = list()
easy_plot
easy_plot()
source("include.R")
source("plot functions/plotter.R")
all_fits = list()
all_fits = list()
for (time in 1:53){
fit = curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[time], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits[[time]] = fit
salso_out = salso(fit$Si,loss="binder", maxNClusters = 8)
easy_plot(salso_out)
}
View(allXcons)
subject_obs_vec
z
for (time in 1:53){
fit = curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = Xcon1, Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits[[time]] = fit
salso_out = salso(fit$Si,loss="binder", maxNClusters = 8)
easy_plot(salso_out)
}
time_span = c(1:53)
sites = data.frame(
longitude = unique(df_weekly$Longitude),
latitude = unique(df_weekly$Latitude))
std_sites = data.frame(
longitude = unique(df_wsc$Longitude),
latitude = unique(df_wsc$Latitude))
stations = unique(df_wsc$IDStations)
y=data.frame()
for(st in stations){
y_we_pm10=cbind(as.data.frame(st),t(df_wsc[which(df_wsc$IDStations==st),"AQ_pm10"]))
y=rbind(y,y_we_pm10)
}
colnames(y)<- c("id",paste0("w", 1:53))
df_wsc
plot(sites)
sites_plt = sites
colnames(sites_plt) = c("Longitude","Latitude")
library(ppmSuite)
library(tidyverse)
library(lubridate)
library(patchwork)
library(salso)
load("../data/df_weekly.Rdata")
nobs <- 53 # number of week for each stations
nsubject <- length(unique(df_weekly$IDStations)) # number od station
# input data for the curve_PPmX function
y = matrix(nrow = 0, ncol = nobs)
y = df_weekly$AQ_pm10
#
dat <- data.frame(y=c(y),
z=rep(1:nobs, times=nsubject), # is the time
Name=rep(1:nsubject, each=nobs))
allXcons = list()
for (i in 1:53) {
allXcons[[i]] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
allXcons[1]
Xcon1
Xcon1 = data.frame(altitude = df_weekly$Altitude[seq(from=1, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=1, by = 53, length.out=105)])
Xcon1 == allXcons[1]
load("../data/df_weekly.Rdata")
nobs <- 53 # number of week for each stations
nsubject <- length(unique(df_weekly$IDStations)) # number od station
# input data for the curve_PPmX function
y = matrix(nrow = 0, ncol = nobs)
y = df_weekly$AQ_pm10
#
dat <- data.frame(y=c(y),
z=rep(1:nobs, times=nsubject), # is the time
Name=rep(1:nsubject, each=nobs))
allXcons = list()
Xcon1 = data.frame(altitude = df_weekly$Altitude[seq(from=1, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=1, by = 53, length.out=105)])
#Xcon2 = data.frame(altitude = df_weekly$Altitude[seq(from=2, by = 53, length.out=105)],
#   EM_nox_sum = df_weekly$EM_nox_sum[seq(from=2, by = 53, length.out=105)])
for (i in 1:53) {
allXcons[[i]] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
subject_obs_vec <- dat$Name
y <- dat$y
z <- dat$z
identical(Xcon1, allXcons[1])
all(Xcon1 == allXcons[1])
dim(Xcon1)
dim(allXcons[1])
for (i in 1:53) {
allXcons[[i]] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
dim(allXcons[1])
View(allXcons)
allXcons[[1]]
dim(allXcons[[1]])
all(Xcon1 == allXcons[[1]])
subject_obs_vec <- dat$Name
y <- dat$y
z <- dat$z
nknots <- 15
niter <- 5000
nburn <- 2000
nthin <- 3 # we consider every nthin iteartions
nout <- (niter-nburn)/nthin # the number of interatio that we coniser from the mcmc
source("include.R")
source("plot functions/plotter.R")
source("include_clusters_functions.R")
easy_plot()
all_fits = list()
for (time in 1:53){
fit = curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[time]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits[[time]] = fit
salso_out = salso(fit$Si,loss="binder", maxNClusters = 8)
easy_plot(salso_out)
}
simparms <- c(0.0, 1.0, 0.1, 1.0, 1.0, 0.1, 1) # WHAT IS THEIR MEANING IF WE DON'T USE COV
modelPriors <- c(0.5, # Asig
1000^2, # s2_mu
0, # mb0
1000^2, # s2b0
1, # as2b0
1, # bs2b0
1, # at
1.0/0.05) # bt
all_fits = list()
for (time in 1:53){
fit = curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[time]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits[[time]] = fit
salso_out = salso(fit$Si,loss="binder", maxNClusters = 8)
easy_plot(salso_out)
}
fits <- list()
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[1]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits = list()
for (time in 1:53){
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[time]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits[[time]] = fit
salso_out = salso(fit$Si,loss="binder", maxNClusters = 8)
easy_plot(salso_out)
}
y
fits <- list()
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[2]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
fits <- list()
fits <- list()
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[1]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
fits[[1]] = fit
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[2]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
fits[[2]] = fit
View(fits)
View(all_fits)
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[3]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
fits[[3]] = fit
all_fits = list()
for (time in 1:53){
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[time]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits[[time]] = fit
}
save(all_fits, file="all_fits_curveppmx.Rdata")
getwd()
setwd(/Users/abylaikhan.orynbassar/Documents/GitHub/progetto-bayesian/src)
setwd("/Users/abylaikhan.orynbassar/Documents/GitHub/progetto-bayesian/src"")
)
()
1
""
setwd("/Users/abylaikhan.orynbassar/Documents/GitHub/progetto-bayesian/src")
load("../data/df_weekly.Rdata")
load("../data/df_weekly.Rdata")
nobs <- 53 # number of week for each stations
nsubject <- length(unique(df_weekly$IDStations)) # number od station
# input data for the curve_PPmX function
y = matrix(nrow = 0, ncol = nobs)
y = df_weekly$AQ_pm10
#
dat <- data.frame(y=c(y),
z=rep(1:nobs, times=nsubject), # is the time
Name=rep(1:nsubject, each=nobs))
allXcons = list()
Xcon1 = data.frame(altitude = df_weekly$Altitude[seq(from=1, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=1, by = 53, length.out=105)])
for (i in 1:53) {
allXcons[[i]] = data.frame(altitude = df_weekly$Altitude[seq(from=i, by = 53, length.out=105)],
EM_nox_sum = df_weekly$EM_nox_sum[seq(from=i, by = 53, length.out=105)])
}
subject_obs_vec <- dat$Name
y <- dat$y
z <- dat$z
nknots <- 15
niter <- 5000
nburn <- 2000
nthin <- 40 # we consider every nthin iteartions
nout <- (niter-nburn)/nthin # the number of interatio that we coniser from the mcmc
simparms <- c(0.0, 1.0, 0.1, 1.0, 1.0, 0.1, 1) # WHAT IS THEIR MEANING IF WE DON'T USE COV
modelPriors <- c(0.5, # Asig
1000^2, # s2_mu
0, # mb0
1000^2, # s2b0
1, # as2b0
1, # bs2b0
1, # at
1.0/0.05) # bt
all_fits = list()
for (time in 1:53){
fit <- curve_ppmx(y=cbind(y), z=z,
subject=subject_obs_vec,
Xcon = allXcons[[time]], Xcat = NULL,
Xconp=NULL, Xcatp=NULL,
PPM=FALSE, M=1,
q=3, rw_order=1, balanced=1,
nknots=nknots, npredobs=1,
Aparm=100,
modelPriors=modelPriors,
similarity_function=1,
consim=1, calibrate=0,
simParms=simparms,
mh=c(0.1, 1e-4),
draws=niter,
burn=nburn,
thin=nthin)
all_fits[[time]] = fit
}
