# }
hh <- hh + 1
}
source("include.R")
library(CARBayesST)
library(sp)
library(proxy)
library(coda)
ordered_by_time <- df_wsc[order(df_wsc$Time), ]
head(ordered_by_time)
colnames(ordered_by_time)
covariates_to_exclude = c("X","IDStations",
"Latitude","Longitude","Time","day","week"
)
covariates=ordered_by_time[,-which(colnames(ordered_by_time)%in% covariates_to_exclude)]
head(covariates)
spatial_coord = ordered_by_time[ordered_by_time$Time=="2018-01-01",c("IDStations","Latitude","Longitude")]
head(spatial_coord)
coordinates(spatial_coord) <- c("Longitude", "Latitude")
# Calculate the pairwise Euclidean distance matrix
dist_matrix <- as.matrix(proxy::dist(coordinates(spatial_coord), method = "Euclidean"))
dim(dist_matrix)
formula = as.formula("AQ_pm10~.")
mod_linear<-ST.CARlinear(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = 1000,
n.sample = 25000,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.mean.alpha=NULL,
prior.var.alpha=NULL,
prior.nu2=NULL,
prior.tau2=NULL,
rho.slo=NULL,
rho.int=NULL,
MALA=TRUE,
verbose=TRUE)
mod_AR1<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = 1000,
n.sample = 25000,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=1, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
mod_AR2<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = 1000,
n.sample = 25000,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=2, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
model_list = list(mod_linear,mod_AR1,mod_AR2)
mod = model_list[[1]]
summary(mod$samples)
mcmc_matrix = as.matrix(mod$samples$beta)
for(i in 1:dim(mcmc_matrix)[2]){
plot(mcmc_matrix[,i],type="l",cex.axis=0.8)
}
mcmc_matrix = as.matrix(mod$samples$rho)
for(i in 1:dim(mcmc_matrix)[2]){
plot(mcmc_matrix[,i],type="l",cex.axis=0.8)
}
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
mod$accept
# Create an empty matrix with specified row and column names
metrics_matrix <- matrix(NA, nrow = 4, ncol = 6, dimnames = list(c("linear", "ar1", "ar2", "ar adaptive"), c("DIC", "p.d", "WAIC", "p.w", "LMPL", "loglikelihood")))
k = 1
for (mod in model_list) {
metrics_matrix[k, ] <- mod$modelfit
k = k + 1
}
# Convert the matrix to a data frame if needed
metrics_dataframe <- as.data.frame(metrics_matrix)
metrics_dataframe[,c(3,5)]
model_list = list(mod_linear,mod_AR1,mod_AR2)
mod = model_list[[2]]
mcmc_matrix = as.matrix(mod$samples$beta)
for(i in 1:dim(mcmc_matrix)[2]){
plot(mcmc_matrix[,i],type="l",cex.axis=0.8)
}
burnin = 2500
n_sample = 40000
mod_AR1<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = burnin,
n.sample = n_sample,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=1, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
mod_AR2<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = burnin,
n.sample = n_sample,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=2, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
model_list = list(mod_linear,mod_AR1,mod_AR2)
saveRDS(model_list, file = "models_CARBayesST.RData")
mod = model_list[[2]]
mcmc_matrix = as.matrix(mod$samples$beta)
for(i in 1:dim(mcmc_matrix)[2]){
plot(mcmc_matrix[,i],type="l",cex.axis=0.8)
}
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
mod$accept
# Create an empty matrix with specified row and column names
metrics_matrix <- matrix(NA, nrow = 4, ncol = 6, dimnames = list(c("linear", "ar1", "ar2", "ar adaptive"), c("DIC", "p.d", "WAIC", "p.w", "LMPL", "loglikelihood")))
k = 1
for (mod in model_list) {
metrics_matrix[k, ] <- mod$modelfit
k = k + 1
}
# Convert the matrix to a data frame if needed
metrics_dataframe <- as.data.frame(metrics_matrix)
metrics_dataframe[,c(3,5)]
mod = model_list[[3]]
mcmc_matrix = as.matrix(mod$samples$beta)
for(i in 1:dim(mcmc_matrix)[2]){
plot(mcmc_matrix[,i],type="l",cex.axis=0.8)
}
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
mod$accept
# Create an empty matrix with specified row and column names
metrics_matrix <- matrix(NA, nrow = 4, ncol = 6, dimnames = list(c("linear", "ar1", "ar2", "ar adaptive"), c("DIC", "p.d", "WAIC", "p.w", "LMPL", "loglikelihood")))
k = 1
for (mod in model_list) {
metrics_matrix[k, ] <- mod$modelfit
k = k + 1
}
# Convert the matrix to a data frame if needed
metrics_dataframe <- as.data.frame(metrics_matrix)
metrics_dataframe[,c(3,5)]
resid = residuals(mod)
plot(resid,type="l")
print(rownames(selected_variables))
print(rownames(selected_variables)[1:20])
summary_results
print(rownames(selected_variables)[1:20])
EM_covariates_to_exclude = grep("EM",colnames(ordered_by_time))
EM_covariates_to_exclude
EM_covariates_to_exclude = colnames(ordered_by_time)[grep("EM",colnames(ordered_by_time))]
EM_covariates_to_exclude
all_covar = colnames(ordered_by_time)
covariates_to_exclude = c("X","IDStations",
"Latitude","Longitude","Time","day","week"
)
EM_covariates_to_exclude =all_covar[grep("EM",all_covar)]
covariates=ordered_by_time[,-which(all_covar%in% covariates_to_exclude)]
head(covariates)
covariates_to_exclude = c(covariates_to_exclude,EM_covariates_to_exclude)
covariates=ordered_by_time[,-which(all_covar%in% covariates_to_exclude)]
head(covariates)
all_covar = colnames(ordered_by_time)
covariates_to_exclude = c("X","IDStations",
"Latitude","Longitude","Time","day","week"
)
EM_covariates_to_exclude =all_covar[grep("EM_",all_covar)]
covariates_to_exclude = c(covariates_to_exclude,EM_covariates_to_exclude)
covariates=ordered_by_time[,-which(all_covar%in% covariates_to_exclude)]
head(covariates)
EM_covariates_to_exclude
spatial_coord = ordered_by_time[ordered_by_time$Time=="2018-01-01",c("IDStations","Latitude","Longitude")]
head(spatial_coord)
coordinates(spatial_coord) <- c("Longitude", "Latitude")
# Calculate the pairwise Euclidean distance matrix
dist_matrix <- as.matrix(proxy::dist(coordinates(spatial_coord), method = "Euclidean"))
dim(dist_matrix)
formula = as.formula("AQ_pm10~.")
burnin = 2500
n_sample = 40000
mod_AR1<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = burnin,
n.sample = n_sample,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=1, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
mod_AR2<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = burnin,
n.sample = n_sample,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=2, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
model_list = list(mod_linear,mod_AR1,mod_AR2)
saveRDS(model_list, file = "models_CARBayesST.RData")
mod = model_list[[2]]
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
print(rownames(selected_variables)[1:20])
# Create an empty matrix with specified row and column names
metrics_matrix <- matrix(NA, nrow = 4, ncol = 6, dimnames = list(c("linear", "ar1", "ar2", "ar adaptive"), c("DIC", "p.d", "WAIC", "p.w", "LMPL", "loglikelihood")))
k = 1
for (mod in model_list) {
metrics_matrix[k, ] <- mod$modelfit
k = k + 1
}
# Convert the matrix to a data frame if needed
metrics_dataframe <- as.data.frame(metrics_matrix)
metrics_dataframe[,c(3,5)]
summary(mod$samples)
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
print(rownames(selected_variables)[1:20])
print(rownames(selected_variables)[1:23])
print(selected_variables)
mod$accept
# Create an empty matrix with specified row and column names
metrics_matrix <- matrix(NA, nrow = 4, ncol = 6, dimnames = list(c("linear", "ar1", "ar2", "ar adaptive"), c("DIC", "p.d", "WAIC", "p.w", "LMPL", "loglikelihood")))
k = 1
for (mod in model_list) {
metrics_matrix[k, ] <- mod$modelfit
k = k + 1
}
# Convert the matrix to a data frame if needed
metrics_dataframe <- as.data.frame(metrics_matrix)
metrics_dataframe[,c(3,5)]
resid = residuals(mod)
plot(resid,type="l")
mod$summary.results
summary_results
var_removed = summary_results[!(selected_variables%in%rownames(summary_results))]
var_removed
var_removed = summary_results[!(selected_variables%in%rownames(summary_results))]
selected_variables
var_removed = summary_results[!(rownames(selected_variables)%in%rownames(summary_results))]
var_removed
var_removed = summary_results[!(rownames(selected_variables)%in%rownames(summary_results)),]
var_removed
rownames(selected_variables)%in%rownames(summary_results)
rownames(selected_variables)
rownames(summary_results)
var_removed = summary_results[!(rownames(summary_results)%in%rownames(selected_variables)),]
var_removed
print(selected_variables)
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
print(rownames(selected_variables)[1:23])
var_removed = summary_results[!(rownames(summary_results)%in%rownames(selected_variables)),]
print(var_removed)
summary_results = mod$summary.results
a = 2
a
mod = readRDS("AR(1)_model_carbayesST.RData")
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
print(rownames(selected_variables)[1:23])
var_removed = summary_results[!(rownames(summary_results)%in%rownames(selected_variables)),]
print(var_removed)
print(var_removed)
var_removed = rownames(summary_results[!(rownames(summary_results)%in%rownames(selected_variables)),])
print(var_removed)
selected_variables
source("include.R")
library(CARBayesST)
library(sp)
library(proxy)
library(coda)
ordered_by_time <- df_wsc[order(df_wsc$Time), ]
head(ordered_by_time)
all_covar = colnames(ordered_by_time)
covariates_to_exclude = c("X","IDStations",
"Latitude","Longitude","Time","day","week"
)
EM_covariates_to_exclude =all_covar[grep("EM_",all_covar)]
covariates_to_exclude = c(covariates_to_exclude,EM_covariates_to_exclude)
covariates=ordered_by_time[,-which(all_covar%in% covariates_to_exclude)]
### after 1 iteration - selected variables (AR(1))
covariates=ordered_by_time[,-which(colnames(covariates)%in%var_removed)] head(covariates)
all_covar = colnames(ordered_by_time)
covariates_to_exclude = c("X","IDStations",
"Latitude","Longitude","Time","day","week"
)
EM_covariates_to_exclude =all_covar[grep("EM_",all_covar)]
covariates_to_exclude = c(covariates_to_exclude,EM_covariates_to_exclude)
covariates=ordered_by_time[,-which(all_covar%in% covariates_to_exclude)]
### after 1 iteration - selected variables (AR(1))
covariates=ordered_by_time[,-which(colnames(covariates)%in%var_removed)] head(covariates)
covariates=ordered_by_time[,-which(colnames(covariates)%in%var_removed)]
var_removed
covariates
all_covar = colnames(ordered_by_time)
covariates_to_exclude = c("X","IDStations",
"Latitude","Longitude","Time","day","week"
)
EM_covariates_to_exclude =all_covar[grep("EM_",all_covar)]
covariates_to_exclude = c(covariates_to_exclude)
covariates=ordered_by_time[,-which(all_covar%in% covariates_to_exclude)]
### after 1 iteration - selected variables (AR(1))
covariates=ordered_by_time[,-which(colnames(covariates)%in%var_removed)]
covariates
all_covar = colnames(ordered_by_time)
covariates_to_exclude = c("X","IDStations",
"Latitude","Longitude","Time","day","week"
)
EM_covariates_to_exclude =all_covar[grep("EM_",all_covar)]
covariates_to_exclude = c(covariates_to_exclude,EM_covariates_to_exclude)
covariates=ordered_by_time[,-which(all_covar%in% covariates_to_exclude)]
### after 1 iteration - selected variables (AR(1))
covariates=ordered_by_time[,-which(colnames(covariates)%in%var_removed)]
spatial_coord = ordered_by_time[ordered_by_time$Time=="2018-01-01",c("IDStations","Latitude","Longitude")]
head(spatial_coord)
coordinates(spatial_coord) <- c("Longitude", "Latitude")
# Calculate the pairwise Euclidean distance matrix
dist_matrix <- as.matrix(proxy::dist(coordinates(spatial_coord), method = "Euclidean"))
dim(dist_matrix)
formula = as.formula("AQ_pm10~.")
burnin = 2500
n_sample = 40000
mod_AR1<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = burnin,
n.sample = n_sample,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=1, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
summary_results = mod$summary.results
mod = mod_AR1
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
print(rownames(selected_variables)[1:23])
var_removed = rownames(summary_results[!(rownames(summary_results)%in%rownames(selected_variables)),])
print(var_removed)
print(selected_variables)
colnames(selected_variables)
rownames(selected_variables)
# Create an empty matrix with specified row and column names
metrics_matrix <- matrix(NA, nrow = 4, ncol = 6, dimnames = list(c("linear", "ar1", "ar2", "ar adaptive"), c("DIC", "p.d", "WAIC", "p.w", "LMPL", "loglikelihood")))
k = 1
for (mod in model_list) {
metrics_matrix[k, ] <- mod$modelfit
k = k + 1
}
mod$modelfit
covariates = ordered_by_time[,selected_variables]
selected_variables_vec_1 = rownames(selected_variables)[1:21]
selected_variables_vec_1
covariates = ordered_by_time[,selected_variables_vec_1]
selected_variables_vec_1
selected_variables_vec_1
selected_variables_vec_1 =selected_variables_vec_1[grep("mode_wind_direction",selected_variables_vec_1)]
covariates = ordered_by_time[,c(selected_variables_vec_1,"WE_mode_wind_direction_10m","WE_mode_wind_direction_100m")]
selected_variables_vec_1
selected_variables_vec_1 = rownames(selected_variables)[1:21]
selected_variables_vec_1
selected_variables_vec_clean =selected_variables_vec_1[-grep("mode_wind_direction",selected_variables_vec_1)]
covariates = ordered_by_time[,c(selected_variables_vec_clean,"WE_mode_wind_direction_10m","WE_mode_wind_direction_100m")]
selected_variables_vec_clean
covariates
burnin = 2500
n_sample = 40000
mod_AR1_2<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = burnin,
n.sample = n_sample,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=1, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
formula
spatial_coord = ordered_by_time[ordered_by_time$Time=="2018-01-01",c("IDStations","Latitude","Longitude")]
head(spatial_coord)
coordinates(spatial_coord) <- c("Longitude", "Latitude")
# Calculate the pairwise Euclidean distance matrix
dist_matrix <- as.matrix(proxy::dist(coordinates(spatial_coord), method = "Euclidean"))
dim(dist_matrix)
formula = as.formula("AQ_pm10~.")
selected_variables_vec_clean =selected_variables_vec_1[-grep("mode_wind_direction",selected_variables_vec_1)]
covariates = ordered_by_time[,c(selected_variables_vec_clean,"WE_mode_wind_direction_10m","WE_mode_wind_direction_100m","AQ_pm10")]
covariates
burnin = 2500
n_sample = 40000
mod_AR1_2<-ST.CARar(formula= formula,
family = "gaussian",
data=covariates,
W= dist_matrix,
burnin = burnin,
n.sample = n_sample,
thin=10,
n.chains=1,
n.cores=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
AR=1, #1 or 2
rho.S=NULL,
rho.T=NULL,
MALA=TRUE,
verbose=TRUE)
mod = mod_AR1_2
summary_results = mod$summary.results
summary_results = data.frame(summary_results)
# Identify variables with credible intervals excluding zero
selected_variables <- summary_results[summary_results$X2.5. > 0 | summary_results$X97.5. < 0, ]
print(selected_variables)
selected_variables_vec_1 = rownames(selected_variables)[1:21]
print(rownames(selected_variables)[1:23])
var_removed = rownames(summary_results[!(rownames(summary_results)%in%rownames(selected_variables)),])
print(var_removed)
selected_variables
mod$modelfit
